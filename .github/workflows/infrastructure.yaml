name: Deploy infrastructure

on:
  push:
    branches:
      - main
    paths:
      - "infrastructure/**"
      - "!infrastructure/README.md"
  workflow_dispatch:

jobs:
  lint_infrastructure:
    name: Lint infrastructure definitions
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check formatting
        working-directory: ./infrastructure/definition
        run: terraform fmt -check

      - name: Initialize terraform
        working-directory: ./infrastructure/definition
        run: terraform init

      - name: Validate definitions
        working-directory: ./infrastructure/definition
        run: terraform validate -no-color

  apply_infrastructure:
    name: Apply infrastructure definitions
    runs-on: ubuntu-latest
    needs: lint_infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize terraform
        working-directory: infrastructure/definition
        run: terraform init

      - name: Apply terraform
        working-directory: infrastructure/definition
        run: terraform apply -auto-approve

      - name: Write inventory changes
        working-directory: infrastructure/definition
        run: terraform output -raw ansible_inventory > ../configuration/inventory/hosts.yml

      - name: Configure git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Stage, commit and push inventory changes
        run: tools/conditional-commit-inventory.sh

  lint_configuration:
    name: Lint configuration code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install ansible
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user ansible
          python -m pip install --user jmespath

      - name: Install requirements from Ansible galaxy
        working-directory: infrastructure/configuration
        run: ansible-galaxy install -r requirements.yml

      - name: Run ansible lint
        uses: ansible/ansible-lint@v6

  apply_configuration:
    name: Apply configuration
    runs-on: ubuntu-latest
    needs:
      - lint_configuration
      - apply_infrastructure
    defaults:
      run:
        working-directory: infrastructure/configuration

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install ansible
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user ansible
          python -m pip install --user jmespath

      - name: Install requirements from Ansible galaxy
        run: ansible-galaxy install -r requirements.yml

      - name: Run install cluster playbook
        env:
          HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
          HCP_VS_ORGANIZATION_ID: ${{ secrets.HCP_VS_ORGANIZATION_ID }}
          HCP_VS_PROJECT_ID: ${{ secrets.HCP_VS_PROJECT_ID }}
          HCP_VS_APP_ID: ${{ secrets.HCP_VS_APP_ID }}
        run: ansible-playbook playbooks/install-cluster.yml -i inventory/hosts.yml
